# This is an autogenerated function, ported from the original legacy version.
# It /should work/ as is, but will not have all the benefits of the modern
# function API. You should see the function docs to learn how to add function
# signatures for type safety and to document this function using puppet-strings.
#
# https://puppet.com/docs/puppet/latest/custom_functions_ruby.html
#
# ---- original file header ----
def create_hash(value, user, ensure_entry, entry, home_dir)
  hash = {
    :user   => user,
    :ensure => ensure_entry,
    :entry  => entry
  }

  unless value.nil?
    hash[:value] = value
  end

  unless home_dir.empty?
    hash[:custom_home_dir] = home_dir
  end

  hash
end

# ---- original file header ----
#
# @summary
#   Summarise what the function does here
#
Puppet::Functions.create_function(:'composer::create_config_hash') do
  # @param args
  #   The original array of arguments. Port this to individually managed params
  #   to get the full benefit of the modern function API.
  #
  # @return [Data type]
  #   Describe what the function returns here
  #
  dispatch :default_impl do
    # Call the method named 'default_impl' when this is matched
    # Port this to match individual params for better type safety
    repeated_param 'Any', :args
  end


  def default_impl(*args)
    
    configs      = args[0]
    user         = args[1].to_s
    ensure_entry = args[2].to_s
    hash         = {}
    home_dir     = args[3].nil? ? '' : args[3].to_s

    if configs.is_a? Hash
      configs.each do |entry, value|
        if value.is_a? Hash
          value.each do |key, value|
            value     = value.join ' ' if value.is_a? Array
            cnf_entry = "'#{entry}'.'#{key}'"

            hash["#{cnf_entry}-#{user}-create"] = create_hash value, user, ensure_entry, cnf_entry, home_dir
          end
        else
          if value.is_a? Array
            value = value.join ' '
          end

          hash["#{entry}-#{user}-create"] = create_hash value, user, ensure_entry, entry, home_dir
        end
      end
    else
      configs.each do |value|
        hash["#{value}-#{user}-remove"] = create_hash nil, user, 'absent', value, home_dir
      end
    end

    return hash
  
  end
end
